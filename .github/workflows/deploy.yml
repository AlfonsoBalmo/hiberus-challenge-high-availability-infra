name: Deploy Infrastructure

on:
  push:
    branches:
      - main

jobs:
  setup_infrastructure:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Verify and create S3 bucket if it doesn't exist
        id: verify_create_bucket
        run: |
          if aws s3 ls "s3://${{ env.TF_VAR_lambda_s3_bucket }}" 2>&1 | grep -q 'NoSuchBucket'
          then
            echo "Bucket does not exist. Creating it..."
            aws s3api create-bucket --bucket ${{ env.TF_VAR_lambda_s3_bucket }} --region us-east-1
          else
            echo "Bucket exists. Skipping creation."
          fi
        env:
          TF_VAR_lambda_s3_bucket: "unique-lambda-bucket-abcdef123456"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        run: terraform init

      - name: Delete existing Lambda function if it exists
        run: |
          if aws lambda get-function --function-name hiberus-lambda 2>&1 | grep -q 'ResourceNotFoundException'
          then
            echo "Lambda function does not exist. Skipping deletion."
          else
            echo "Lambda function exists. Deleting it..."
            aws lambda delete-function --function-name hiberus-lambda
          fi

      - name: Apply Terraform
        run: terraform apply -auto-approve
        env:
          TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
          TF_VAR_lambda_s3_bucket: "unique-lambda-bucket-abcdef123456"
          TF_VAR_lambda_s3_key: "lambda_function.zip"

  build_and_deploy:
    runs-on: ubuntu-latest
    needs: setup_infrastructure

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: List files in the directory
        run: ls -la

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Package Lambda function
        run: |
          zip -r lambda_function.zip .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Upload Lambda package to S3
        run: |
          aws s3 cp lambda_function.zip s3://unique-lambda-bucket-abcdef123456/lambda_function.zip
